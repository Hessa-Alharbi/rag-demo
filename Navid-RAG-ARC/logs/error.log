2025-02-25 01:37:23.405 | ERROR    | core.db:get_session:21 | Database session error: 500: Authentication failed
2025-02-25 01:37:48.972 | ERROR    | core.db:get_session:21 | Database session error: 500: Registration failed
2025-02-25 01:49:18.985 | ERROR    | core.db:get_session:31 | Database session error: 400: Email already registered
2025-02-25 01:52:36.716 | ERROR    | core.db:get_session:31 | Database session error: (sqlite3.IntegrityError) NOT NULL constraint failed: document.content
[SQL: INSERT INTO document (id, title, content, doc_metadata, status, vector_ids, conversation_id, created_by_id, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('af72443e07a2420a937db9f8e7150dd2', 'Amended Securities Business Regulations-ar.pdf', None, '{}', 'PROCESSING', '[]', '61ff029dbc32493bafc8df7cb3fe4973', '79ba2c8ae22b430799a6a0a92f315669', '2025-02-24 20:52:36.697809', '2025-02-24 20:52:36.697809')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-02-25 02:22:36.984 | ERROR    | apps.rag.services:__init__:31 | Failed to initialize RAGService: not enough values to unpack (expected 3, got 0)
2025-02-25 02:24:18.279 | ERROR    | apps.rag.services:__init__:31 | Failed to initialize RAGService: not enough values to unpack (expected 3, got 0)
2025-02-25 02:27:56.656 | ERROR    | apps.rag.services:__init__:38 | Failed to initialize RAGService: Could not import rank_bm25, please install with `pip install rank_bm25`.
2025-02-25 02:30:02.753 | ERROR    | core.db:get_session:31 | Database session error: 401: Invalid credentials
2025-02-25 02:32:25.976 | ERROR    | apps.rag.services:hybrid_search:182 | Error in hybrid search: '\n    "semantic_queries"'
2025-02-25 02:32:25.978 | ERROR    | apps.chat.routes:create_message:124 | Error generating response: '\n    "semantic_queries"'
2025-02-25 02:32:26.007 | ERROR    | apps.chat.routes:create_message:136 | Error creating message: '\n    "semantic_queries"'
2025-02-25 02:32:26.011 | ERROR    | core.db:get_session:31 | Database session error: 500: {'error': 'message_creation_failed', 'message': 'Failed to create message', 'code': 500, 'details': {'error': '\'\\n    "semantic_queries"\''}, 'timestamp': '2025-02-24T21:32:26.009521'}
2025-02-25 02:40:17.340 | ERROR    | apps.test.routes:test_embeddings:24 | Embeddings test failed: object list can't be used in 'await' expression
2025-02-25 02:40:45.634 | ERROR    | apps.test.routes:test_vector_store:58 | Vector store test failed: A list of valid ids are required when auto_id is False. You can set `auto_id` to True in this Milvus instance to generate ids automatically, or specify string-type ids for each text.
2025-02-25 02:42:16.593 | ERROR    | apps.test.routes:test_embeddings:25 | Embeddings test failed: object list can't be used in 'await' expression
2025-02-25 02:46:34.147 | ERROR    | apps.test.routes:test_vector_store:69 | Vector store test failed: A list of valid ids are required when auto_id is False. You can set `auto_id` to True in this Milvus instance to generate ids automatically, or specify string-type ids for each text.
2025-02-25 02:49:59.660 | ERROR    | apps.rag.services:__init__:43 | Failed to initialize RAGService: Milvus.__init__() got an unexpected keyword argument 'dimension'
2025-02-25 02:52:12.626 | ERROR    | apps.rag.services:__init__:45 | Failed to initialize RAGService: Milvus.__init__() got an unexpected keyword argument 'collection_config'
2025-02-25 02:57:04.957 | ERROR    | apps.rag.services:__init__:36 | Failed to initialize RAGService: Milvus.__init__() got an unexpected keyword argument 'schema'
2025-02-25 03:00:00.471 | ERROR    | core.vector_store.utils:ensure_milvus_collection:22 | Error ensuring Milvus collection: <ConnectionNotExistException: (code=1, message=should create connection first.)>
2025-02-25 03:00:00.473 | ERROR    | apps.rag.services:__init__:36 | Failed to initialize RAGService: <ConnectionNotExistException: (code=1, message=should create connection first.)>
2025-02-25 03:02:46.231 | ERROR    | core.vector_store.utils:ensure_milvus_collection:26 | Error ensuring Milvus collection: Either `embedding_function` or `builtin_function` should be provided.
2025-02-25 03:02:46.232 | ERROR    | apps.rag.services:__init__:36 | Failed to initialize RAGService: Either `embedding_function` or `builtin_function` should be provided.
2025-02-25 03:06:11.008 | ERROR    | core.vector_store.utils:create_milvus_collection:29 | Error creating Milvus collection: <MilvusException: (code=700, message=index not found[collection=document_store])>
2025-02-25 03:06:11.009 | ERROR    | apps.rag.services:__init__:37 | Failed to initialize RAGService: <MilvusException: (code=700, message=index not found[collection=document_store])>
2025-02-25 03:10:41.241 | ERROR    | __main__:reset_vector_store:48 | Error resetting vector store: 'Settings' object has no attribute 'EMBEDDING_DIMENSION'
2025-02-25 03:12:37.910 | ERROR    | apps.rag.services:__init__:37 | Failed to initialize RAGService: no running event loop
2025-02-25 03:16:06.604 | ERROR    | apps.test.routes:test_vector_store:93 | Vector store test failed: A list of valid ids are required when auto_id is False. You can set `auto_id` to True in this Milvus instance to generate ids automatically, or specify string-type ids for each text.
2025-02-25 03:17:04.105 | ERROR    | apps.rag.services:_generate_search_queries:236 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:17:04.106 | ERROR    | apps.test.routes:test_hybrid_search:145 | Hybrid search test failed: '\n    "semantic_queries"'
2025-02-25 03:18:23.146 | ERROR    | apps.test.routes:test_vector_store:93 | Vector store test failed: A list of valid ids are required when auto_id is False. You can set `auto_id` to True in this Milvus instance to generate ids automatically, or specify string-type ids for each text.
2025-02-25 03:21:36.287 | ERROR    | core.vector_store.utils:create_milvus_collection:52 | Error creating Milvus collection: <MilvusException: (code=65535, message=only metric type can be passed when use AutoIndex)>
2025-02-25 03:21:36.288 | ERROR    | apps.test.routes:test_vector_store:97 | Vector store test failed: <MilvusException: (code=65535, message=only metric type can be passed when use AutoIndex)>
2025-02-25 03:25:06.201 | ERROR    | apps.rag.services:_generate_search_queries:236 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:25:06.201 | ERROR    | apps.test.routes:test_hybrid_search:145 | Hybrid search test failed: '\n    "semantic_queries"'
2025-02-25 03:30:01.342 | ERROR    | apps.rag.services:_generate_search_queries:236 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:30:01.345 | ERROR    | apps.test.routes:test_hybrid_search:145 | Hybrid search test failed: '\n    "semantic_queries"'
2025-02-25 03:33:01.878 | ERROR    | apps.rag.services:_generate_search_queries:258 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:33:01.879 | ERROR    | apps.rag.services:_generate_search_queries:258 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:33:01.880 | ERROR    | apps.rag.services:hybrid_search:190 | Error in hybrid search: 'VectorStoreManager' object has no attribute 'similarity_search'
2025-02-25 03:33:01.880 | ERROR    | apps.test.routes:test_hybrid_search:145 | Hybrid search test failed: 'VectorStoreManager' object has no attribute 'similarity_search'
2025-02-25 03:35:16.927 | ERROR    | apps.rag.services:_generate_search_queries:265 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:35:16.928 | ERROR    | apps.rag.services:_generate_search_queries:265 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:35:44.331 | ERROR    | core.db:get_session:31 | Database session error: 401: Invalid credentials
2025-02-25 03:38:26.702 | ERROR    | apps.rag.services:_generate_search_queries:265 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 03:50:56.329 | ERROR    | apps.rag.services:__init__:38 | Failed to initialize RAGService: 'Settings' object has no attribute 'DATA_DIR'
2025-02-25 03:52:36.569 | ERROR    | core.vector_store.manager:initialize_store:31 | Error initializing vector store: Error code: 401 - {'error': {'message': 'Incorrect API key provided: your_ope************here. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-02-25 03:56:06.679 | ERROR    | core.vector_store.manager:initialize_store:44 | Error initializing vector store: Could not import faiss python package. Please install it with `pip install faiss-gpu` (for CUDA supported GPU) or `pip install faiss-cpu` (depending on Python version).
2025-02-25 03:56:06.680 | ERROR    | apps.rag.services:__init__:38 | Failed to initialize RAGService: Vector store initialization failed: Could not import faiss python package. Please install it with `pip install faiss-gpu` (for CUDA supported GPU) or `pip install faiss-cpu` (depending on Python version).
2025-02-25 03:58:50.305 | ERROR    | core.db:get_session:31 | Database session error: 'RAGService' object has no attribute 'get_document'
2025-02-25 03:58:50.309 | ERROR    | core.middleware:error_handler:11 | Unhandled error: 'RAGService' object has no attribute 'get_document'
2025-02-25 04:04:03.135 | ERROR    | core.db:get_session:31 | Database session error: RAGService.get_document() missing 1 required positional argument: 'session'
2025-02-25 04:04:03.156 | ERROR    | core.middleware:error_handler:11 | Unhandled error: RAGService.get_document() missing 1 required positional argument: 'session'
2025-02-25 04:07:37.320 | ERROR    | core.db:get_session:31 | Database session error: RAGService.get_document_status() missing 1 required positional argument: 'session'
2025-02-25 04:07:37.324 | ERROR    | core.middleware:error_handler:11 | Unhandled error: RAGService.get_document_status() missing 1 required positional argument: 'session'
2025-02-25 04:08:07.004 | ERROR    | apps.rag.routes:upload_document:82 | Error processing document: (sqlite3.OperationalError) table document has no column named current_status
[SQL: INSERT INTO document (id, title, content, doc_metadata, status, vector_ids, conversation_id, created_by_id, created_at, updated_at, current_status, is_searchable) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('e82460ca2eee4f539f7e35277f8e9295', '1st dataset navid RAG.docx', '', '{"file_size": 13826, "file_type": "application/octet-stream", "attachment_id": "5801d1f2-d9ac-4dc0-99be-e0cc8eb3ad2c"}', 'PROCESSING', '[]', 'ea37a2c3b4854dd1988289cdcb40464f', '25384abfe3d64861bbb5eb8c986ceea1', '2025-02-24 23:08:06.993438', '2025-02-24 23:08:06.993438', 'QUEUED', 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-02-25 04:08:07.006 | ERROR    | core.db:get_session:31 | Database session error: 500: (sqlite3.OperationalError) table document has no column named current_status
[SQL: INSERT INTO document (id, title, content, doc_metadata, status, vector_ids, conversation_id, created_by_id, created_at, updated_at, current_status, is_searchable) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]
[parameters: ('e82460ca2eee4f539f7e35277f8e9295', '1st dataset navid RAG.docx', '', '{"file_size": 13826, "file_type": "application/octet-stream", "attachment_id": "5801d1f2-d9ac-4dc0-99be-e0cc8eb3ad2c"}', 'PROCESSING', '[]', 'ea37a2c3b4854dd1988289cdcb40464f', '25384abfe3d64861bbb5eb8c986ceea1', '2025-02-24 23:08:06.993438', '2025-02-24 23:08:06.993438', 'QUEUED', 0)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-02-25 16:49:05.328 | ERROR    | core.db:get_session:31 | Database session error: 401: Invalid credentials
2025-02-25 16:51:37.201 | ERROR    | apps.rag.services:_generate_search_queries:334 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 17:02:58.979 | ERROR    | apps.rag.services:generate_response:277 | Error generating response: object LLMResult can't be used in 'await' expression
2025-02-25 17:02:58.983 | ERROR    | apps.chat.routes:generate_rag_response:228 | Error generating response: object LLMResult can't be used in 'await' expression
2025-02-25 17:07:39.415 | ERROR    | apps.rag.services:_generate_search_queries:335 | Error generating search queries: '\n    "semantic_queries"'
2025-02-25 17:28:02.707 | ERROR    | apps.rag.services:_generate_search_queries:325 | Search query generation error: 'RAGService' object has no attribute 'HYBRID_SEARCH_PROMPT'
2025-02-25 17:38:32.406 | ERROR    | apps.rag.services:_generate_search_queries:337 | Search query generation error: '\n    "semantic_queries"'
2025-02-25 17:42:12.950 | ERROR    | apps.rag.services:_generate_search_queries:351 | Search query generation error: 'ChatOpenAI' object has no attribute 'chat'
2025-02-26 01:03:22.379 | ERROR    | core.vector_store.connection:ensure_connection:22 | Failed to connect to Milvus: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-02-26 01:03:22.379 | ERROR    | __main__:lifespan:32 | Failed to start application: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-02-26 01:11:31.067 | ERROR    | core.vector_store.connection:ensure_connection:22 | Failed to connect to Milvus: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-02-26 01:11:31.067 | ERROR    | __main__:lifespan:32 | Failed to start application: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-02-26 01:12:33.413 | ERROR    | core.vector_store.connection:ensure_connection:22 | Failed to connect to Milvus: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-02-26 01:12:33.413 | ERROR    | __main__:lifespan:32 | Failed to start application: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-02-26 01:22:18.916 | ERROR    | apps.rag.services:_generate_search_queries:337 | Search query generation error: '\n    "semantic_queries"'
2025-02-26 01:30:06.954 | ERROR    | core.vector_store.manager:_create_store:38 | Error creating vector store: 'Settings' object has no attribute 'get_embeddings'
2025-02-26 01:30:06.962 | ERROR    | core.vector_store.manager:initialize:27 | Failed to initialize vector store: 'Settings' object has no attribute 'get_embeddings'
2025-02-26 01:30:06.963 | ERROR    | apps.rag.services:query_documents:524 | Error in document query: 'Settings' object has no attribute 'get_embeddings'
2025-02-26 01:30:06.963 | ERROR    | apps.chat.routes:query_documents:442 | Error processing query: 'Settings' object has no attribute 'get_embeddings'
2025-02-26 01:30:06.968 | ERROR    | core.db:get_session:31 | Database session error: 500: {'error': 'query_failed', 'message': 'Query failed / فشل الاستعلام', 'code': 500, 'details': {'error': "'Settings' object has no attribute 'get_embeddings'"}, 'timestamp': '2025-02-25T20:30:06.963511'}
2025-02-26 01:35:19.388 | ERROR    | core.db:get_session:31 | Database session error: "'error'"
2025-02-26 01:35:19.391 | ERROR    | core.middleware:error_handler:11 | Unhandled error: "'error'"
2025-02-26 01:41:18.773 | ERROR    | core.db:get_session:31 | Database session error: "'error'"
2025-02-26 01:41:18.777 | ERROR    | core.middleware:error_handler:11 | Unhandled error: "'error'"
2025-02-26 01:44:41.901 | ERROR    | core.db:get_session:31 | Database session error: "'error'"
2025-02-26 01:44:41.905 | ERROR    | core.middleware:error_handler:11 | Unhandled error: "'error'"
2025-02-26 02:05:42.027 | ERROR    | apps.chat.routes:process_query:417 | Error processing query: '_GeneratorContextManager' object has no attribute 'query'
2025-02-26 02:09:26.127 | ERROR    | apps.chat.routes:process_query:441 | Error processing query: (builtins.AttributeError) 'str' object has no attribute 'hex'
[SQL: SELECT conversation.id, conversation.title, conversation.created_by_id, conversation.created_at, conversation.updated_at 
FROM conversation 
WHERE conversation.id = ? AND conversation.created_by_id = ?]
[parameters: [{}]]
2025-02-26 02:11:40.021 | ERROR    | apps.rag.services:_generate_search_queries:350 | Error generating search queries: 'ChatOpenAI' object has no attribute 'chat'
2025-02-26 02:17:36.074 | ERROR    | apps.rag.services:__init__:55 | Failed to initialize RAGService: 'Settings' object has no attribute 'OPENAI_MODEL_NAME'
2025-02-26 02:22:07.084 | ERROR    | apps.rag.services:__init__:55 | Failed to initialize RAGService: 'Settings' object has no attribute 'OPENAI_MODEL_NAME'
2025-02-26 02:23:38.474 | ERROR    | apps.rag.services:__init__:55 | Failed to initialize RAGService: 'Settings' object has no attribute 'OPENAI_MODEL_NAME'
2025-02-26 02:35:52.695 | ERROR    | apps.rag.services:_generate_search_queries:397 | Error generating search queries: 'ChatOpenAI' object has no attribute 'chat'
2025-02-26 02:48:08.234 | ERROR    | apps.rag.services:process_attachments:465 | Error processing document 1st dataset navid RAG.docx: 'RAGService' object has no attribute 'task_queue'
2025-03-03 07:42:51.690 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: status_code: None, body: The client must be instantiated be either passing in token or setting CO_API_KEY
2025-03-03 07:44:08.564 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: [Errno 11001] getaddrinfo failed
2025-03-03 08:12:15.248 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: status_code: None, body: The client must be instantiated be either passing in token or setting CO_API_KEY
2025-03-03 08:14:01.295 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: status_code: None, body: The client must be instantiated be either passing in token or setting CO_API_KEY
2025-03-03 08:14:47.850 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: status_code: None, body: The client must be instantiated be either passing in token or setting CO_API_KEY
2025-03-03 08:15:15.108 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: status_code: None, body: The client must be instantiated be either passing in token or setting CO_API_KEY
2025-03-03 08:16:11.662 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: The api_key client option must be set either by passing api_key to the client or by setting the OPENAI_API_KEY environment variable
2025-03-03 08:16:58.564 | ERROR    | apps.rag.services:__init__:52 | Failed to initialize RAGService: The api_key client option must be set either by passing api_key to the client or by setting the OPENAI_API_KEY environment variable
2025-03-03 08:29:33.189 | ERROR    | core.vector_store.connection:ensure_connection:22 | Failed to connect to Milvus: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-03-03 08:29:33.190 | ERROR    | __main__:lifespan:33 | Failed to start application: <MilvusException: (code=2, message=Fail connecting to server on localhost:19530, illegal connection params or server unavailable)>
2025-03-03 08:40:52.232 | ERROR    | apps.rag.services:_generate_search_queries:398 | Error generating search queries: Error code: 401 - {'error': 'Unauthorized'}
2025-03-03 08:40:52.234 | ERROR    | apps.rag.services:hybrid_search:318 | Error in hybrid search: RAGService._get_default_queries() missing 1 required positional argument: 'is_arabic'
2025-03-03 08:41:14.583 | ERROR    | apps.test.routes:test_llm:116 | LLM test failed: Error code: 401 - {'error': 'Unauthorized'}
2025-03-03 08:50:49.109 | ERROR    | apps.rag.services:_generate_search_queries:398 | Error generating search queries: Error code: 400 - {'object': 'error', 'message': '[{\'type\': \'int_type\', \'loc\': (\'body\', \'prompt\', \'list[int]\', 0), \'msg\': \'Input should be a valid integer\', \'input\': [{\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}, {\'content\': \'Generate search queries for this question: explain it\\nReturn ONLY a JSON object.\'}]}, {\'type\': \'int_type\', \'loc\': (\'body\', \'prompt\', \'list[list[int]]\', 0, 0), \'msg\': \'Input should be a valid integer\', \'input\': {\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}}, {\'type\': \'int_type\', \'loc\': (\'body\', \'prompt\', \'list[list[int]]\', 0, 1), \'msg\': \'Input should be a valid integer\', \'input\': {\'content\': \'Generate search queries for this question: explain it\\nReturn ONLY a JSON object.\'}}, {\'type\': \'string_type\', \'loc\': (\'body\', \'prompt\', \'str\'), \'msg\': \'Input should be a valid string\', \'input\': [[{\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}, {\'content\': \'Generate search queries for this question: explain it\\nReturn ONLY a JSON object.\'}]]}, {\'type\': \'string_type\', \'loc\': (\'body\', \'prompt\', \'list[str]\', 0), \'msg\': \'Input should be a valid string\', \'input\': [{\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}, {\'content\': \'Generate search queries for this question: explain it\\nReturn ONLY a JSON object.\'}]}]', 'type': 'BadRequestError', 'param': None, 'code': 400}
2025-03-03 08:50:49.112 | ERROR    | apps.rag.services:hybrid_search:318 | Error in hybrid search: RAGService._get_default_queries() missing 1 required positional argument: 'is_arabic'
2025-03-03 08:51:06.727 | ERROR    | apps.rag.services:_generate_search_queries:398 | Error generating search queries: Error code: 400 - {'object': 'error', 'message': '[{\'type\': \'int_type\', \'loc\': (\'body\', \'prompt\', \'list[int]\', 0), \'msg\': \'Input should be a valid integer\', \'input\': [{\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}, {\'content\': \'Generate search queries for this question: what is this document about?\\nReturn ONLY a JSON object.\'}]}, {\'type\': \'int_type\', \'loc\': (\'body\', \'prompt\', \'list[list[int]]\', 0, 0), \'msg\': \'Input should be a valid integer\', \'input\': {\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}}, {\'type\': \'int_type\', \'loc\': (\'body\', \'prompt\', \'list[list[int]]\', 0, 1), \'msg\': \'Input should be a valid integer\', \'input\': {\'content\': \'Generate search queries for this question: what is this document about?\\nReturn ONLY a JSON object.\'}}, {\'type\': \'string_type\', \'loc\': (\'body\', \'prompt\', \'str\'), \'msg\': \'Input should be a valid string\', \'input\': [[{\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}, {\'content\': \'Generate search queries for this question: what is this document about?\\nReturn ONLY a JSON object.\'}]]}, {\'type\': \'string_type\', \'loc\': (\'body\', \'prompt\', \'list[str]\', 0), \'msg\': \'Input should be a valid string\', \'input\': [{\'content\': \'You are a search query generator that helps create effective search queries.\\nYour responses should be valid JSON only, with no additional text or explanation.\\nAlways return a JSON object with these fields:\\n- semantic_queries: List of alternative ways to express the query\\n- keyword_terms: Important individual terms for searching\\n- arabic_terms: Arabic language terms (if applicable)\\n- filters: Any metadata filters to apply\\n\\nExample format:\\n{\\n    "semantic_queries": ["main query", "alternative phrasing"],\\n    "keyword_terms": ["important", "terms"],\\n    "arabic_terms": ["arabic terms"],\\n    "filters": {}\\n}\'}, {\'content\': \'Generate search queries for this question: what is this document about?\\nReturn ONLY a JSON object.\'}]}]', 'type': 'BadRequestError', 'param': None, 'code': 400}
2025-03-03 08:51:06.736 | ERROR    | apps.rag.services:hybrid_search:318 | Error in hybrid search: RAGService._get_default_queries() missing 1 required positional argument: 'is_arabic'
2025-03-03 08:57:04.213 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 08:59:14.941 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 09:00:00.415 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 09:02:16.585 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 09:03:44.890 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 09:09:08.199 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 09:12:23.357 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
2025-03-03 09:12:58.771 | ERROR    | apps.rag.services:_generate_search_queries:391 | Failed to parse search queries
